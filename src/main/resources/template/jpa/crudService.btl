package ${packagePath}.service.crud;

import ${packagePath}.entity.${entityName};
import ${packagePath}.repository.${entityName}Repository;
import ${exceptionPackagePath}.BizException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.jpa.domain.Specification;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.Optional;

/**
 * ${tableComment}
 * CRUD ${entityName} Service
 *
 * @author ${author}
 */
@Service
public class ${crudServicePrefix}${entityName}Service {

    @Autowired
    private ${entityName}Repository ${lowerEntityName}Repository;

    /**
     * 列表查询
     */
    public List<${entityName}> selectList(Specification<${entityName}> spec) {
        return ${lowerEntityName}Repository.findAll(spec);
    }

    /**
     * 分页查询
     */
    public Page<${entityName}> selectPage(Specification<${entityName}> spec, Pageable pageable) {
        return ${lowerEntityName}Repository.findAll(spec, pageable);
    }

    /**
     * 通过ID获取一个可能存在的实体
     */
    public Optional<${entityName}> selectByIdOptional(${entityIdType} id) {
        return ${lowerEntityName}Repository.findById(id);
    }

    /**
     * 通过ID获取一个存在的实体
     */
    public ${entityName} selectById(${entityIdType} id) {
        return ${lowerEntityName}Repository.findById(id).orElseThrow(() -> new BizException());
    }

    /**
     * 通过条件获取一个可能存在的实体
     */
    public Optional<${entityName}> selectOneOptional(Specification<${entityName}> spec) {
        return ${lowerEntityName}Repository.findOne(spec);
    }

    /**
     * 通过条件获取一个存在的实体
     */
    public ${entityName} selectOne(Specification<${entityName}> spec) {
        return ${lowerEntityName}Repository.findOne(spec).orElseThrow(() -> new BizException());
    }

    /**
     * 统计个数
     */
    public long count(Specification<${entityName}> spec) {
        return ${lowerEntityName}Repository.count(spec);
    }

    /**
     * 是否存在
     */
    public boolean exist(Specification<${entityName}> spec) {
        return ${lowerEntityName}Repository.count(spec) > 0;
    }

    /**
     * 插入实体
     */
    public ${entityName} insert(${entityName} entity) {
        return ${lowerEntityName}Repository.saveAndFlush(entity);
    }

    /**
     * 更新实体
     */
    public ${entityName} updateById(${entityName} entity) {
        return ${lowerEntityName}Repository.saveAndFlush(entity);
    }

    /**
     * 删除实体
     */
    public void deleteById(${entityIdType} id) {
        ${lowerEntityName}Repository.deleteById(id);
    }


    // ----------------------------------------------------------------------------------- //
    // -------------------------------- 下面是CRUD的扩展 ----------------------------------- //
    // ----------------------------------------------------------------------------------- //


}